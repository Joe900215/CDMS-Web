@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>艾三维协同管理信息系统 - 参照</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    @*<meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">@*ie8安装chrome frame后，使用chrome模式*@

    @*解决360浏览器默认使用了IE7内核*@
    <meta http-equiv="x-ua-compatible" content="IE=9,8" /> 

    <link rel="stylesheet" type="text/css" href="@Url.Content("Scripts/extjs6/classic/theme-classic/resources/theme-classic-all.css")" />    
    @*<link rel="stylesheet" type="text/css" href="@Url.Content("Scripts/extjs6/resources/css/ext-all.css")" />*@    
    <link rel="stylesheet" type="text/css" href="@Url.Content("Scripts/app/resources/css/app.css")" />    @*在首页添加css样式表*@

    
    <script type="text/javascript" src="@Url.Content("Scripts/extjs6/ext-all.js")"></script>
    <script type="text/javascript" src="@Url.Content("Scripts/extjs6/classic/locale/locale-zh_CN.js")"></script>
    @*<script type="text/javascript" src="@Url.Content("Scripts/extjs6/Ext-lang-zh_CN.js")"></script>*@
    @*<script type="text/javascript" src="@Url.Content("Scripts/extjs6/ux/data/PagingMemoryProxy.js")"></script>*@ 

    @*<script type="text/javascript" src="@Url.Content("Scripts/extjs6/ux/upload/plupload/js/plupload.js")"></script>
    <script type="text/javascript" src="@Url.Content("Scripts/extjs6/ux/upload/plupload/js/plupload.html4.js")"></script>
    <script type="text/javascript" src="@Url.Content("Scripts/extjs6/ux/upload/plupload/js/plupload.html5.js")"></script>
    <script type="text/javascript" src="@Url.Content("Scripts/extjs6/ux/upload/plupload/js/plupload.flash.js")"></script>
    <script type="text/javascript" src="@Url.Content("Scripts/extjs6/ux/upload/plupload/js/plupload.silverlight.js")"></script>*@


    <script type="text/javascript" src="@Url.Content("Scripts/extjs6/ux/jsencrypt/jsencrypt.js")"></script>




</head>
<body>
    
    <script>

    Ext.Loader.setConfig({
        enabled: true,
        paths: {
            ////定义应用程序的路径
            'Ext.ux': 'scripts/extjs6/ux',
            'Ext.ux.upload': 'scripts/extjs6/ux/upload',
            'CDMSWap': 'scripts/app',
            //定义用户插件路径
            'Ext.plug_ins.gcz': 'scripts/app/plug_ins/gcz'
        }
    });

    Ext.ns('CDMSWap');

    //处理错误信息的代码,CDMSWap.ProxyException的定义:
    //路径：\CDMSWap\Scripts\app\store\Users.js
    //在proxy定义内添加listeners配置项来监听exception事件
    CDMSWap.ProxyException = function (proxy, response, opts) {
        if (typeof (opts.error) != "undefined")
            Ext.Msg.alert("错误信息", "连接服务器失败，请稍后再试！"+opts.error.statusText);//opts.error);
    }

    CDMSWap.ModelException = function (response, opts) {
        Ext.Msg.alert("错误信息", "数据模型错误！"+opts.error.statusText);
    }

    CDMSWap.FormSubmitFailure = function (form,action) {
        if (action.failureType === "connect") {
            Ext.Msg.alert('错误',
            '状态:' + action.response.status + ': ' +
            action.response.statusText);
            return;
        }
        if (action.result) {
            if (action.result.Msg)
                Ext.Msg.alert('错误', action.result.Msg);
        }
    }

    //忽略js错误提示
    function SlyarErrors() {
        return true;
    }

    window.onerror = SlyarErrors;

</script>

    @{
        //如果用户已经登录就加载主页面 controllers: ["MainPanel"] ，否则显示登录窗口
        if (Session["IsAuthenticated"] != null && Session["IsAuthenticated"].ToString() == "true")
        {

            <script>

    CDMSWap.Userinfo = {
                Roles: [
                    @Html.Raw("'系统管理员'")
                ]
    };

            CDMSWap.postParams = {
                path: null,
        "ASPSESSID": "@Session.SessionID",
        "AUTHID": ""
            };

            CDMSWap.tinyCfg = {
                // 基本选项
                theme: "advanced", //使用高级选项
        language: "zh",   //使用中文
        skin: "extjs",    //使用extjs的样式
        inlinepopups_skin: "extjs",
        inline_styles: true,
        theme_advanced_row_height: 27,
        delta_height: 0,
        convert_urls: false,
        relative_urls: true,
        media_use_script: true,

        //要添加那些插件
        plugins: "autolink,lists,pagebreak,style,layer,table,advhr,advimage,advlink,inlinepopups,media,searchreplace,contextmenu,paste,directionality,noneditable,visualchars,nonbreaking,advlist,imagemanager",

        // 样式选项，用来设置显示那些操作按钮
        theme_advanced_buttons1: "bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect",
        theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,code,|,forecolor,backcolor",
        theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,media,advhr,|,ltr,rtl,|,imagemanager",
        theme_advanced_toolbar_location: "top",
        theme_advanced_toolbar_align: "left",
        theme_advanced_statusbar_location: "bottom",

        // 设置前台站点使用到的样式，这样样式会显示在样式列表中，这里没有，就没设置
        //content_css: "Scripts/Extjs/ux/Form/site.css"
    };


            Ext.onReady(function () {
                if (Ext.BLANK_IMAGE_URL.substr(0, 4) != "data") {
                    Ext.BLANK_IMAGE_URL = "Content/Images/s.gif";
                }

                Ext.application({
                    name: "CDMSWap",//定义应用程序的名称
                    appFolder: "scripts/app/gcz",//应用程序的路径
                    autoCreateViewport: true,//自动加载\Script\app\View目录下的Viewport.js文件,在Loader中配置
                    controllers: ["MainPanel"]//自动加载主面板的控制器\Script\app\controller\MainPanel.js
                });

                Ext.EventManager.onWindowResize(function () {
                    Ext.ComponentManager.each(function (cmpId, cmp, length) {
                        if (cmp.hasOwnProperty("renderTo")) {
                            //cmp.doLayout();
                        }
                    });
                });
            })

            </script>
        }
        else
        {
            //如果未登录，就显示登录窗口
            <script>
                Ext.require('Ext.ux.gcz.Login');

            Ext.onReady(function () {
                if (Ext.BLANK_IMAGE_URL.substr(0, 4) != "data") {
                    Ext.BLANK_IMAGE_URL = "Content/Images/s.gif";
                }

                Ext.ux.gcz.Login.show();
            })
            </script>
            }
        }

    <script>

    /*
    *函数功能：从href获得参数
    *sHref:   http://www.artfh.com/arg.htm?arg1=d&arg2=re
    *sArgName:arg1, arg2
    *return:    the value of arg. d, re
    */
    function GetArgsFromHref(sHref, sArgName) {
        var args = sHref.split("?");
        var retval = "";

        if (args[0] == sHref) /*参数为空*/ {
            return retval; /*无需做任何处理*/
        }
        var str = args[1];
        args = str.split("&");
        for (var i = 0; i < args.length; i++) {
            str = args[i];
            var arg = str.split("=");
            if (arg.length <= 1) continue;
            if (arg[0] == sArgName) retval = arg[1];
        }
        return retval;
    }


    //在js中定义被c#调用的方法:
    //function Messageaa(message) {
    //    alert(browserName+","+message);
    //}
    function Messageaa() {
        alert("cccc");
    }

    //设置文件状态图标
    function SetImgClass(imgViewId, classValue, recordIndex) {
        
        //获取表格的DOM对象
        var viewDom = document.getElementById(imgViewId);

        //找到文件状态所在图标的DOM对象
        var viewImg = viewDom.childNodes["0"].children["0"].childNodes[recordIndex + 1].children[1].children["0"].childNodes["0"];

        //设置文件状态图标为检出状态
        viewImg.setAttribute('class', classValue);

    }

    //设置文件状态图标
    function SetWBImgClass(imgViewId, classValue, recordIndex) {
        
        //alert(imgViewId + "__" + classValue + "__" + recordIndex);

        //获取表格的DOM对象
        var viewDom = document.getElementById(imgViewId);

        //找到文件状态所在图标的DOM对象
        var cn = viewDom.childNodes["0"].childNodes[2].childNodes["0"].childNodes[1].childNodes[recordIndex];
        var viewImg = cn.children["0"].childNodes["0"].childNodes[1].children["0"].children["0"];
        //设置文件状态图标为检出状态
        //var oldClass = viewImg.getAttribute("class");
        //alert(oldClass + "__" + classValue);
        //viewImg.setAttribute('class', oldClass);
        viewImg.setAttribute('class', classValue);

    }

        //记录浏览器的类型
        var _browserName = "ie";
        localStorage.setItem("_browserName", _browserName);


    //在js中定义被c#调用的方法,设置浏览器类型:
    function setBrowserType(type) {
        _browserName = type;
        localStorage.setItem("_browserName", type);

    }

    //刷新文件夹目录树
    function SendRefreshProjectTree(treePanelId, projectKeyword) {

        Ext.RefreshProjectTree(treePanelId, projectKeyword);

    }
    
    //设置文档列表框下部消息
    function SendSetDocGridBarMsg(gridPanelId, msg) {

        Ext.setDocGridBarMsg(gridPanelId,msg);

    }

	//设置意见
    function SendSetVoiceToAudit(auditPanelId, msg) {

        Ext.setVoiceToAudit(auditPanelId,msg);

    }
	
    </script>
</body>
</html>

